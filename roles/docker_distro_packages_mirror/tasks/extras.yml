- debug: var=distro_vendor
- debug: var=distro_version
- name: distro packages extras search
  shell: |
     distro_vendor='{{ distro_vendor }}'
     distro_version='{{ distro_version }}'
     distro_release='{{ distro_version.split(".")[0] }}'
     distro_reference='{{ distro_version.split(".")[-1] }}'
     repo='{{ distro_packages_mirror_repository }}'
     case "$distro_vendor" in centos)
        for year in 17 18 19 20 21; do
            echo "distro_reference=$distro_reference" >&2
            [ "${year}12" -lt "$distro_reference" ] && continue
            for month in 01 02 03 04 05 06 07 08 09 10 11 12; do
                image="$repo/mirror-packages/epel-repo:$distro_release.x.$year$month"
                if docker inspect -f "{{ '{{.ID}}' }}" "$image" >/dev/null ; then
                    [ "$year$month" -lt "$distro_reference" ] || distro_image="$image"
                fi
                [ -n "$distro_image" ]  && break
            done
            [ -n "$distro_image" ]  && break
        done
     ;; esac
     echo "$distro_image"
     [ -n "$distro_image" ]
  register: distro_packages_extras_names
  ignore_errors: yes
- name: distro packages extras image
  set_fact:
    distro_packages_extras_image: '{{ distro_packages_extras_names.stdout }}'
    distro_packages_extras_container: '{{ distro_extras[distro_vendor] + "-repo-" + distro_version }}'
  when: "distro_packages_extras_names.rc == 0"
- name: distro packages extras container info
  command: docker inspect '{{distro_packages_extras_container}}'
  register: distro_packages_extras_container_info
  ignore_errors: yes
  when: "distro_packages_extras_container is defined"
- name: distro packages extras container found
  set_fact:
     distro_packages_extras_container_found: "{{ distro_packages_extras_container_info.rc == 0 }}"
     distro_packages_extras_container_running: no
- name: distro packages extras container vars
  set_fact:
     distro_packages_extras_container_vars: "{{ distro_packages_extras_container_info.stdout | from_json }}"
  when: 'distro_packages_extras_container_found|bool'
- name: distro packages extras container status
  set_fact:
     distro_packages_extras_container_running: '{{ distro_packages_extras_container_vars[0]["State"]["Status"] in ["running"] }}'
  when: 'distro_packages_extras_container_found'
- name: distro packages extras container not running
  command: docker rm -f '{{distro_packages_extras_container}}'
  when: 'distro_packages_extras_container_found|bool and not distro_packages_extras_container_running|bool'
- name: distro packages extras container need restart
  set_fact:
     distro_packages_extras_container_found: false
  when: 'distro_packages_extras_container_found|bool and not distro_packages_extras_container_running|bool'
- name: distro packages extras container
  command: docker run -d --rm=true \
    --name '{{distro_packages_extras_container}}' \
           '{{distro_packages_extras_image}}'
  when: 'not distro_packages_extras_container_found'
- name: distro packages extras container new info
  command: docker inspect '{{distro_packages_extras_container}}'
  register: distro_packages_extras_container_info2
  when: 'not distro_packages_extras_container_found'
- name: distro packages extras container info
  set_fact:
    distro_packages_extras_container_info: "{{ distro_packages_extras_container_info2 }}"
  when: 'not distro_packages_extras_container_found'
- name: distro packages extras container vars
  set_fact:
    distro_packages_extras_container_vars: '{{distro_packages_extras_container_info.stdout | from_json }}'
- name: distro packages extras ip
  set_fact:
    distro_packages_extras_ip: '{{ distro_packages_extras_container_vars[0]["NetworkSettings"]["IPAddress"] }}'
- debug: var=distro_packages_extras_ip
#
- name: distro_packages_extras_etc_hosts for centos
  set_fact:
    distro_packages_extras_etc_hosts: '{{ dict([("mirrors.fedoraproject.org", distro_packages_extras_ip)]) }}'
  when: 'distro_vendor == "centos"'
- name: distro_packages_extras_etc_hosts for ubuntu
  set_fact:
    distro_packages_extras_etc_hosts: '{{ dict([("universe.ubuntu.com", distro_packages_extras_ip)]) }}'
  when: 'distro_vendor == "ubuntu"'
#
- name: distro_packages_extras_add_hosts for centos
  set_fact:
    distro_packages_extras_add_hosts: '--add-host mirrors.fedoraproject.org:{{distro_packages_extras_ip}}'
  when: 'distro_vendor == "centos"'
- name: distro_packages_extras_add_hosts for ubuntu
  set_fact:
    distro_packages_extras_add_hosts: '--add-host universe.ubuntu.com:{{distro_packages_extras_ip}}'
  when: 'distro_vendor == "ubuntu"'
#
- debug: var=distro_packages_extras_add_hosts
