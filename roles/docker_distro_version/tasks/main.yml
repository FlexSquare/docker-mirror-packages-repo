- name: check base image
  command: docker images --quiet '{{ image }}'
  register: base_image_found
- name: pull base image
  command: docker pull '{{ image }}'
  when: 'not base_image_found.stdout'
- name: check container name
  set_fact:
     detect: '{{ "detect-" + image.split("/")[-1].replace(":", "-") }}'
- name: cleanup container for base image
  command: docker rm -f '{{ detect }}'
  ignore_errors: yes
- name: started container for base image
  command: docker run -d --name '{{ detect }}' '{{ image }}' sleep infinity
- name: os-release from base image
  command: |
     docker exec '{{ detect }}' bash -c \
      '. /etc/os-release ; echo "ID: \"$ID\""; echo "VERSION_ID: \"$VERSION_ID\""; echo "NAME: \"$NAME\""'
  register: os_release_found
- name: os_release from base image
  set_fact:
    os_release: "{{ os_release_found.stdout | from_yaml }}"
- name: show OS ID
  debug: var=os_release.ID
- name: show OS VERSION
  debug: var=os_release.VERSION_ID
- name: centos-release from base image
  command: |
     docker exec '{{ detect }}' bash -c \
      'cat /etc/centos-release | sed -e "s|.*release *||" -e "s| .*||"'
  register: centos_release_found
  when: 'os_release.ID == "centos"'
- name: centos_release from base image
  set_fact:
    centos_release: "{{ centos_release_found.stdout }}"
  when: 'os_release.ID == "centos"'
- name: show CENTOS VERSION
  debug: var=centos_release
  when: 'os_release.ID == "centos"'
- name: stopped container for base image
  command: docker rm -f '{{ detect }}'
- name: distro_vendor from os_release
  set_fact:
    distro_vendor: '{{ os_release.ID .replace("opensuse-leap", "opensuse") }}'
- name: distro_version from os_release
  set_fact:
    distro_version: '{{ os_release.VERSION_ID }}'
- name: distro_version from centos_release
  set_fact:
    distro_version: "{{ centos_release }}"
  when: 'os_release.ID == "centos"'
